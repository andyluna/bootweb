spring:
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/springjpa?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&autoReconnect=false&failOverReadOnly=false&serverTimezone=CTT
        username: springjpa
        password: springjpa
        primary:
            type: com.zaxxer.hikari.HikariDataSource
            jdbc-url: jdbc:mysql://localhost:3306/springjpa?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&autoReconnect=false&failOverReadOnly=false&serverTimezone=CTT
            username: springjpa
            password: springjpa
            driverClassName: com.mysql.cj.jdbc.Driver
            pool-name: primaryHikariDatasource
            readOnly: false
            minimumIdle: 3
            maximumPoolSize: 10
            maxLifetime: 1800000     #池中连接最长生命周期 30分钟
            idleTimeout: 600000      #连接允许在池中闲置的最长时间 600000
            connectionTimeout: 30000 #等待来自池的连接的最大毫秒数
            autoCommit: true         #自动提交从池中返回的连接
            connectionInitSql:       #该属性设置一个SQL语句，在将每个新连接创建后，将其添加到池中之前执行该语句。
        second:
            type: com.zaxxer.hikari.HikariDataSource
            jdbc-url: jdbc:mysql://localhost:3306/springjpa1?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&autoReconnect=false&failOverReadOnly=false&serverTimezone=CTT
            username: springjpa1
            password: springjpa1
            driverClassName: com.mysql.cj.jdbc.Driver
            pool-name: secondHikariDatasource
            readOnly: false
            minimumIdle: 3
            maximumPoolSize: 10
            maxLifetime: 1800000     #池中连接最长生命周期 30分钟
            idleTimeout: 600000      #连接允许在池中闲置的最长时间 600000
            connectionTimeout: 30000 #等待来自池的连接的最大毫秒数
            autoCommit: true         #自动提交从池中返回的连接
        third:
            url: jdbc:mysql://localhost:3306/springjpa2?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&autoReconnect=false&failOverReadOnly=false&serverTimezone=Asia/Shanghai
            username: springjpa2
            password: springjpa2
            driverClassName: com.mysql.cj.jdbc.Driver
            pool-name: thirdDruidDatasource
            type: com.alibaba.druid.pool.DruidDataSource
            initialSize: 3
            minIdle: 3
            maxActive: 20
            maxWait: 60000
            timeBetweenEvictionRunsMillis: 60000
            minEvictableIdleTimeMillis: 300000
            poolPreparedStatements: true # 是否缓存preparedStatement，
            maxOpenPreparedStatements: 100 #启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
            validationQuery:    #用来检测连接是否有效的sql testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
            testOnBorrow: true	#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            testOnReturn: false	#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
            testWhileIdle: false	#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            filters: stat,wall #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计 stat,日志log4j,防御sql注入wall
            connectionInitSqls:  #每次连接初始化sql
            maxPoolPreparedStatementPerConnectionSize: 20
            useGlobalDataSourceStat: true
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    jpa:
        show-sql: true
        open-in-view: true
        database: mysql
        database-platform: org.hibernate.dialect.MySQL8Dialect
        hibernate:
            ddl-auto: update
            use-new-id-generator-mappings: true
            naming:
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        properties:
            hibernate:
                format_sql: true
